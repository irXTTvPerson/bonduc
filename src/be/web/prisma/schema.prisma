// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DraftAccount {
  created_at      DateTime @default(now())
  email           String   @unique
  password        String
  address         String   @unique
  family          String
  token           String   @unique
  screen_name     String
  identifier_name String   @unique
}

model Account {
  id                 String     @id @unique @default(dbgenerated("gen_random_uuid()"))
  created_at         DateTime   @default(now())
  updated_at         DateTime?  @updatedAt
  email              String     @unique
  password           String
  ip_address         Json
  screen_name        String
  inbox              String
  outbox             String
  follower_uri       String
  following_uri      String
  identifier_name    String     @unique
  header_uri         String     @default("/img/default_header.png")
  icon_uri           String     @default("/img/default_icon.png")
  account_unique_uri String     @unique
  bio                String?
  Pod                Pod[]
  setting            Setting?
  Favorite           Favorite[]
}

enum PodType {
  pod
  qp // quoted pod
  dp // duplicated pod
  mention
}

enum PodVisibility {
  anyone
  login // loggedin account only
  global // global timeline only
  local // local timeline only
  following
  follower
  mutual // mutual following account only
  mention // mentioned account only
  list // listed in account only
  password // password authenticated account only
  myself // just myself only
}

model Pod {
  id             String        @id @unique @default(dbgenerated("gen_random_uuid()"))
  created_at     DateTime      @default(now())
  updated_at     DateTime?     @updatedAt
  to             Json // uri
  cc             Json? // uri
  from           Account       @relation(fields: [account_id], references: [id])
  body           String
  account_id     String
  favorite_count Int           @default(0)
  Favorite       Favorite[]
  type           PodType       @default(pod)
  rp_from_id     String? // qp or dp の参照元pod id
  visibility     PodVisibility @default(global)
}

model Setting {
  id                       String  @id @unique @default(dbgenerated("gen_random_uuid()"))
  who                      Account @relation(fields: [account_id], references: [id])
  account_id               String  @unique
  turn_notification_off    Boolean @default(false)
  allow_all_follow_request Boolean @default(true)
}

enum NotificationType {
  follow_requested
  follow_request_accepted
  follow_request_rejected
  followed
  muted
  blocked
  liked
  RTed
}

model Notification {
  id              String           @id @unique @default(dbgenerated("gen_random_uuid()"))
  created_at      DateTime         @default(now())
  to_account_id   String // 受信
  from_account_id String // 発信
  type            NotificationType
  context         String? // 何に対して行ったか　Pod|Account のid
  deactivated     Boolean          @default(false) // 通知画面からの操作を受け付けるか
  opened          Boolean          @default(false)
}

model Follow {
  id              String   @id @unique @default(dbgenerated("gen_random_uuid()"))
  created_at      DateTime @default(now())
  from_account_id String
  to_account_id   String
}

model Favorite {
  id         String   @id @unique @default(dbgenerated("gen_random_uuid()"))
  created_at DateTime @default(now())
  to         Pod      @relation(fields: [pod_id], references: [id])
  from       Account  @relation(fields: [account_id], references: [id])
  pod_id     String
  account_id String
}
